.scoring
  - if current_user.admin? && @record.creator.present?
    %h3 Score recorded by #{@record.creator.name}

  = form_tag maneuver_participant_path(@record), method: :put do
    = hidden_field_tag :maneuver_id, @maneuver.id
    = hidden_field_tag :participant_id, @participant.id
    - @maneuver.grouped_obstacles.each do |(point_value, type), obstacles|
      .form-group
        = label_tag "#{point_value}-point #{type.pluralize} touched"
        - value = @record.obstacles_hit[obstacles.first.id].try(:[], 1) || 0
        = number_field_tag_with_buttons "obstacle_#{obstacles.first.id}", value, in: 0..obstacles.count
    - @maneuver.distance_targets.each do |target|
      .form-group
        = label_tag "#{target.interval_type} from #{target.name}"
        = number_field_tag_with_buttons "target_#{target.id}",
                                        @record.distances_achieved[[target.minimum, target.multiplier]],
                                        min: 0
    .form-group
      - if @maneuver.name.include? 'Reverse'
        = label_tag 'Extra reverses'
      - else
        = label_tag 'Reverses'
      = number_field_tag_with_buttons :reversed_direction, @record.reversed_direction, min: 0
    - if @maneuver.speed_target.present?
      .form-group
        = label_tag "Achieved #{@maneuver.speed_target} mph"
        = hidden_field_tag :speed_acheived, false
        = giant_check_box_tag :speed_achieved, true, @record.speed_achieved?
    - if @maneuver.counts_additional_stops?
      .form-group
        = label_tag 'Extra stops?'
        = hidden_field_tag :made_additional_stops, false
        = giant_check_box_tag :made_additional_stops, true, @record.made_additional_stops?
    .form-group
      = label_tag 'Completed as designed?'
      = hidden_field_tag :completed_as_designed, false
      = giant_check_box_tag :completed_as_designed, true, @record.completed_as_designed?
    .form-group
      = submit_tag 'Save score', class: 'btn btn-primary submit'
      = link_to previous_participant_maneuver_path(@maneuver, relative_to: @participant.number) do
        %button.btn.btn-secondary.actions{type: :button}
          %i.fa-solid.fa-arrow-left
          %span.d-none.d-sm-inline Previous participant
      = link_to next_participant_maneuver_path(@maneuver, relative_to: @participant.number) do
        %button.btn.btn-secondary.actions{type: :button}
          %span.d-none.d-sm-inline Next participant
          %i.fa-solid.fa-arrow-right
