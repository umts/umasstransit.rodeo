%table.scoreboard.table.table-bordered.table-striped.table-sm.text-center{data: { sortList: sort_list(@sort_order) } }
  %thead.thead-light
    %tr
      %th{ data: { sortInitialOrder: 'asc' } } Participant
      - @maneuvers.each do |maneuver|
        %th= maneuver.name
      %th Onboard Judging
      %th Maneuvers total
      %th Circle Check
      %th Quiz
      %th Total score
  %tbody
    - @participants.each do |participant|
      - scores = @scores[participant.id]
      %tr{ data: { participant_id: participant.id } }
        %td.participant{ data: { text: participant.number } }
          - if @top_20.include? participant
            = participant.display_information(:name, :number)
          - else
            = participant.display_information(:number)
        - @maneuvers.each do |maneuver|
          - record = scores.try(:[], maneuver.id).try :first
          %td.maneuver-participant{data: { maneuver_id: maneuver.id }.merge(score_data record) }
            = score_cell record,
              new: new_maneuver_participant_path(maneuver: maneuver.name, participant: participant.number),
              edit: url_for(record)
        - onboard_judging = participant.onboard_judging
        %td.onboard-judging{data: {onboard_judging_id: onboard_judging.try(:id)}.merge(score_data onboard_judging) }
          = score_cell onboard_judging,
            new: new_onboard_judging_path(participant: participant.number),
            edit: url_for(onboard_judging)
        %td.maneuver-score{data: {math: 'row-maneuversum', math_mask: '#0'}}= participant.maneuver_score
        - cc = participant.circle_check_score
        %td.circle-check-score{data: {circle_check_score_id: cc.try(:id)}.merge(score_data cc) }
          = score_cell cc, new: circle_check_scores_path
        - quiz = participant.quiz_score
        %td.quiz-score{ data: { quiz_score_id: quiz.try(:id)}.merge(score_data quiz) }
          = score_cell quiz, new: quiz_scores_path
        %td.total-score{data: {math: 'row-subtotalsum'} }= participant.total_score
